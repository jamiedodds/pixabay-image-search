{"ast":null,"code":"import _classCallCheck from \"/home/jamied/react_learning/pixabay/pixabay/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jamied/react_learning/pixabay/pixabay/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jamied/react_learning/pixabay/pixabay/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jamied/react_learning/pixabay/pixabay/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jamied/react_learning/pixabay/pixabay/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jamied/react_learning/pixabay/pixabay/src/components/image_results/ImageResults.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nvar ImageResults =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImageResults, _Component);\n\n  function ImageResults() {\n    _classCallCheck(this, ImageResults);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ImageResults).apply(this, arguments));\n  }\n\n  _createClass(ImageResults, [{\n    key: \"render\",\n    value: function render() {\n      var imageListContent;\n      var images = this.props.images;\n\n      if (images) {\n        imageListContent = React.createElement(GridList, {\n          cols: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, images.map(function (img) {\n          return React.createElement(GridTile, {\n            title: img.tags,\n            key: img.id,\n            subtitle: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22\n              },\n              __self: this\n            }, \"by \", React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 23\n              },\n              __self: this\n            }, img.user)),\n            actionIcon: React.createElement(IconButton, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27\n              },\n              __self: this\n            }, React.createElement(ZoomIn, {\n              color: \"white\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28\n              },\n              __self: this\n            })),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: img.largeImageURL,\n            alt: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }));\n        }));\n      } else {\n        imageListContent = null;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ImageResults;\n}(Component);\n\nImageResults.PropTypes = {\n  images: PropTypes.array.isRequired\n};\nexport default ImageResults;","map":{"version":3,"sources":["/home/jamied/react_learning/pixabay/pixabay/src/components/image_results/ImageResults.js"],"names":["React","Component","PropTypes","GridList","GridTile","IconButton","ZoomIn","Dialog","FlatButton","ImageResults","imageListContent","images","props","map","img","tags","id","user","largeImageURL","array","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAiC,sBAAjC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;IAEMC,Y;;;;;;;;;;;;;6BACI;AACR,UAAIC,gBAAJ;AADQ,UAEAC,MAFA,GAEW,KAAKC,KAFhB,CAEAD,MAFA;;AAIR,UAAGA,MAAH,EAAW;AACVD,QAAAA,gBAAgB,GACf,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACEC,MAAM,CAACE,GAAP,CAAW,UAAAC,GAAG;AAAA,iBACd,oBAAC,QAAD;AACC,YAAA,KAAK,EAAEA,GAAG,CAACC,IADZ;AAEC,YAAA,GAAG,EAAED,GAAG,CAACE,EAFV;AAGC,YAAA,QAAQ,EACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAASF,GAAG,CAACG,IAAb,CADJ,CAJF;AAQC,YAAA,UAAU,EACT,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACC,oBAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,CATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAcC;AAAK,YAAA,GAAG,EAAEH,GAAG,CAACI,aAAd;AAA6B,YAAA,GAAG,EAAC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdD,CADc;AAAA,SAAd,CADF,CADD;AAsBA,OAvBD,MAuBO;AACNR,QAAAA,gBAAgB,GAAG,IAAnB;AACA;;AAED,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAKA;;;;EArCyBT,S;;AAwC3BQ,YAAY,CAACP,SAAb,GAAyB;AACxBS,EAAAA,MAAM,EAAET,SAAS,CAACiB,KAAV,CAAgBC;AADA,CAAzB;AAIA,eAAeX,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {GridList, GridTile} from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nclass ImageResults extends Component {\n\trender() {\n\t\tlet imageListContent;\n\t\tconst { images } = this.props;\n\n\t\tif(images) {\n\t\t\timageListContent = (\n\t\t\t\t<GridList cols={3}>\n\t\t\t\t\t{images.map(img => (\n\t\t\t\t\t\t<GridTile\n\t\t\t\t\t\t\ttitle={img.tags}\n\t\t\t\t\t\t\tkey={img.id}\n\t\t\t\t\t\t\tsubtitle={\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\tby <strong>{img.user}</strong>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tactionIcon={\n\t\t\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t\t\t<ZoomIn color=\"white\" />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img src={img.largeImageURL} alt=\"\"/>\n\t\t\t\t\t\t</GridTile>\n\t\t\t\t\t))}\n\t\t\t\t</GridList>\n\t\t\t)\n\t\t} else {\n\t\t\timageListContent = null;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nImageResults.PropTypes = {\n\timages: PropTypes.array.isRequired\n}\n\nexport default ImageResults;"]},"metadata":{},"sourceType":"module"}